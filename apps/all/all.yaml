---
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      expose: "true"
      app: payment-checker
      group: tech.claudioed
    name: payment-checker
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: payment-checker
      group: tech.claudioed
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v1
      expose: "false"
      app: payment-checker
      group: tech.claudioed
    name: payment-checker
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: payment-checker
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: payment-checker
          version: v1
          group: tech.claudioed
      spec:
        containers:   
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: SERVER_PORT
            value: "8080"
          - name: JAEGER_SERVICE_NAME
            value: payment-checker            
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"                  
          image: claudioed/payment-checker:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: requesters
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      expose: "true"
      app: payments
      group: tech.claudioed
    name: payments
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: payments
      group: tech.claudioed
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v1
      expose: "false"
      app: payments
      group: tech.claudioed
    name: payments
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: payments
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: payments
          version: v1
          group: tech.claudioed
      spec:
        containers:       
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAEGER_SERVICE_NAME
            value: payments        
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: REGISTER_SVC_URL
            value: http://register:8080
          - name: REQUESTER_SVC_URL
            value: http://payment-checker:8080
          - name: SERVER_PORT
            value: "8080"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"
          - name: NATS_HOST
            value: "nats://10.43.242.150:4222"
          - name: NATS_USER
            value: "nats_client"
          - name: NATS_PASS            
          image: claudioed/payments:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: payments
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false  
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      expose: "true"
      app: register
      group: tech.claudioed
    name: register
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: register
      group: tech.claudioed
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v1
      expose: "false"
      app: register
      group: tech.claudioed
    name: register
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: register
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: register
          version: v1
          group: tech.claudioed
      spec:
        containers:       
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAEGER_SERVICE_NAME
            value: register            
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: REGISTER_OPERATION
            value: APPROVED
          - name: SERVER_PORT
            value: "8080"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"
          image: claudioed/register:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: register
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v3
      expose: "false"
      app: register
      group: tech.claudioed
    name: register-v3
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: register
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: register
          version: v3
          group: tech.claudioed
      spec:
        containers:    
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAEGER_SERVICE_NAME
            value: register        
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: REGISTER_OPERATION
            value: APPROVED
          - name: SERVER_PORT
            value: "8080"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"
          image: claudioed/register:0.0.3-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: register
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v2
      expose: "false"
      app: register
      group: tech.claudioed
    name: register-v2
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: register
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: register
          version: v2
          group: tech.claudioed
      spec:
        containers:     
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAEGER_SERVICE_NAME
            value: register          
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: REGISTER_OPERATION
            value: DENIED
          - name: SERVER_PORT
            value: "8080"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"
          image: claudioed/register:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: register
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v4
      expose: "false"
      app: register
      group: tech.claudioed
    name: register-v4
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: register
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: register
          version: v4
          group: tech.claudioed
      spec:
        containers:       
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAEGER_SERVICE_NAME
            value: register            
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: REGISTER_OPERATION
            value: APPROVED
          - name: SERVER_PORT
            value: "8080"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"
          image: claudioed/register:0.0.4-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: register
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      expose: "true"
      app: crm
      group: tech.claudioed
    name: crm
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: crm
      group: tech.claudioed
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v1
      expose: "false"
      app: crm
      group: tech.claudioed
    name: crm
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: crm
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: crm
          version: v1
          group: tech.claudioed
      spec:
        containers:       
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAEGER_SERVICE_NAME
            value: crm            
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: SERVER_PORT
            value: "8080"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"                  
          image: claudioed/crm:0.0.1-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: crm
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
      prometheus.io/path: "/actuator/prometheus"
    labels:
      version: v2
      expose: "false"
      app: crm
      group: tech.claudioed
    name: crm-v2
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: crm
        group: tech.claudioed
    template:
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/actuator/prometheus"
        labels:
          app: crm
          version: v2
          group: tech.claudioed
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAEGER_SERVICE_NAME
            value: crm
          - name: MONGO_HOST
            value: mongodb.database.svc.cluster.local
          - name: SERVER_PORT
            value: "8080"
          - name: JAEGER_SERVICE_NAME
            value: crm            
          - name: JAEGER_ENDPOINT
            value: "http://jaeger-collector.istio-system.svc:14268/api/traces"
          - name: JAEGER_PROPAGATION
            value: b3
          - name: JAEGER_SAMPLER_TYPE
            value: const
          - name: JAEGER_SAMPLER_PARAM
            value: "1"
          - name: OPENTRACING_LOG_SPANS
            value: "false"
          - name: HTTP_LEVEL_LOGS
            value: "INFO"           
          - name: NATS_HOST
            value: "nats://10.43.242.150:4222"
          - name: NATS_USER
            value: "nats_client"
          - name: NATS_PASS
            value: "DZ3mFLXEDO"                   
          image: claudioed/crm:0.0.2-SNAPSHOT
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: crm
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      expose: "true"
      app: fraud-detection
    name: fraud-detection
  spec:
    ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: fraud-detection
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      version: v1
      expose: "false"
      app: fraud-detection
    name: fraud-detection
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: fraud-detection
    template:
      metadata:
        labels:
          app: fraud-detection
          version: v1
      spec:
        containers:
          - env:
              - name: KUBERNETES_NAMESPACE
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
              - name: MONGO_HOST
                value: mongodb.database.svc.cluster.local
              - name: NATS_HOST
                value: 10.39.251.97
              - name: NATS_USER
                value: nats_client
              - name: NATS_PASS
                value: DZ3mFLXEDO
              - name: JAEGER_ENDPOINT
                value: http://jaeger-collector:14268/api/traces
              - name: CUSTOMER_SERVICE_HOST
                value: customers.payments.svc.cluster.local
              - name: CUSTOMER_SERVICE_PORT
                value: '50051'
              - name: CRM_SERVICE_HOST
                value: crm.payments.svc.cluster.local
              - name: CRM_PORT
                value: '8080'
            name: fraud-detection
            image: larchanjo/fraud-detection:0.0.1-SNAPSHOT
            imagePullPolicy: Always
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 60
            livenessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 120
            securityContext:
              privileged: false
